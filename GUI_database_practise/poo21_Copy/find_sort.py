# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'find_sort.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import pyodbc

from PyQt5 import QtCore, QtGui, QtWidgets


class FindAndSort(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(785, 707)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 30, 401, 91))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(110, 140, 161, 71))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.search_ledit = QtWidgets.QLineEdit(self.centralwidget)
        self.search_ledit.setGeometry(QtCore.QRect(280, 150, 401, 41))
        self.search_ledit.setObjectName("search_ledit")
        self.display = QtWidgets.QLabel(self.centralwidget)
        self.display.setGeometry(QtCore.QRect(110, 210, 571, 321))
        self.display.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.display.setFrameShape(QtWidgets.QFrame.Box)
        self.display.setText("")
        self.display.setObjectName("display")
        self.searchbtn = QtWidgets.QPushButton(self.centralwidget)
        self.searchbtn.setGeometry(QtCore.QRect(110, 550, 571, 61))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.searchbtn.setFont(font)
        self.searchbtn.setObjectName("searchbtn")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 785, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)



        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "FIND AND SORT STUDENTS"))
        self.label_2.setText(_translate("MainWindow", "Student name: "))
        self.searchbtn.setText(_translate("MainWindow", "Find"))

    def search_response(self):
        name = self.search_ledit.text()
        server = 'DESKTOP-PICVBQP\SQLEXPRESS'
        database = 'STUDENTSMANAGEMENT'
        conn_result=False
        try:
            conn = pyodbc.connect(f'DRIVER={{ODBC Driver 17 for SQL Server}};'
                                  f'SERVER={server};'
                                  f'DATABASE={database};'
                                  f'Trusted_Connection=yes;')
            cursor = conn.cursor()
            print("Connection established")

            cursor.execute("SELECT * FROM dbo.students WHERE studentname LIKE ?", ("%" + name + "%",))
            rows = cursor.fetchall()

            if not rows:
                self.display.setText("No student found.")
            else:
                result = ""
                for row in rows:
                    result += f"ID: {row[0]}, Name: {row[1]}, Semester: {row[2]}, Course Name: {row[3]}\n"  # Sửa theo số cột thực tế của bạn
                self.display.setText(result)

        except pyodbc.IntegrityError as e:
            QtWidgets.QMessageBox.critical(None, "SQL Error", "Lỗi: ID bị trùng hoặc sai định dạng.\n" + str(e))
        except pyodbc.Error as e:
            QtWidgets.QMessageBox.critical(None, "SQL Error", str(e))
        except Exception as e:
            QtWidgets.QMessageBox.critical(None, "Unexpected Error", str(e))
        finally:
            try:
                conn.close()
            except:
                pass


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = FindAndSort()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
